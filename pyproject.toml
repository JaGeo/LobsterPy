[build-system]
requires = [
  "setuptools>=65.0.0",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "lobsterpy"
description = "Package for automatic bonding analysis with Lobster/VASP"
readme = "README.md"
keywords = ["high-throughput", "automated", "lobsteroutput", "bonding-analysis"]
license = { text = "BSD 3-Clause" }
authors = [{ name = "Janine George", email = "janine.george@bam.de" }]
version = "0.2.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
     "pymatgen>=2023.1.20",
     "numpy",
     "typing",
     "Sphinx>=4",
     "sphinx-argparse==0.4.0",
     "sphinx-pdj-theme==0.2.1",
]

[project.urls]
homepage = "https://lobsterpy.readthedocs.io/en/latest/?badge=latest"
repository = "https://github.com/JaGeo/LobsterPy"
documentation = "https://lobsterpy.readthedocs.io/en/latest/?badge=latest"
changelog = "https://lobsterpy.readthedocs.io/en/latest/changelog_link.html"

[project.scripts]
lobsterpy = "lobsterpy.cli:main"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.flake8]
exclude = ".git,test"
max-line-length = 120
extend-ignore = "E203,W503,E501,F401,RST21,E741,W291,W293,E231"

[tool.cibuildwheel.linux]
archs = ["auto64"]
skip = ["*musllinux*"]
before-all = "ln -s /usr/lib64/libgfortran.so.5 /usr/lib64/libgfortran.so.3"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} --ignore-missing-dependencies"

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
  "B",   # flake8-bugbear
  "C40", # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "PLE", # pylint error
  "PLW", # pylint warning
  "Q",   # flake8-quotes
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "TID", # tidy imports
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT", # flake8-2020
]
ignore = [
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D105",    # Missing docstring in magic method
  "D107",    # Missing docstring in __init__
  "D200",    # One-line docstring should fit on one line with quotes
  "D205",    # 1 blank line required between summary line and description
  "D212",    # Multi-line docstring summary should start at the first line
  "D415",    # First line should end with a period, question mark, or exclamation point
]
pydocstyle.convention = "google"

[tool.pydocstyle]
ignore = "D100,D104,D105,D106,D107,D200,D203,D205,D212,D213,D301,D400,D401,D402,D403,D404,D406,D407,D413,D415"

isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"*/tests/*" = ["D"]
"tasks.py" = ["D"]

[tool.pytest.ini_options]
addopts = "-x --durations=30 --quiet -rxXs --color=yes -p no:warnings"


[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "@deprecated",
  "show_plot",
]

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
no_implicit_optional = false


[tool.codespell]
ignore-words-list = "titel,alls,ans,nd,mater,nwo,te,hart,ontop,ist,ot,fo"
check-filenames = true

